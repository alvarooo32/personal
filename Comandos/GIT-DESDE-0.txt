GIT DESDE 0

CONFIGURACIÓN INICIAL

-git config --global user.name "nombreUsuario" => configurar el nombre de usuario
-git config --global user.email "direccionCorreo" => configurar el email
-git config --list => te enseña todas las configuraciones
-git config --list --global => te enseña todas las configuraciones que ya tenemos echas tb se puede en local
-git config --global core.editor code.editor "code --wait" => para conectar git con el visual code + (--wait) = decir que espere a cerrarlo para que se guarde el cambio
-git config --global color.ui true => las salidas en pantalla de git se cen mas coloridas
-git config --global core.autocrlf true/input => **(true solo en windows) (input solo en linux/mac)para que cuando subamos o bajemos el archivo no haya problemas al pasar archivos de otros sistemas lo que hace es pasar a la linea de abajo y volver al principio**

(COMANDOS HABITUALES)
-cd <nombre> => para moverse entre carpetas || cd ../ => para retroceder de carpeta
-mkdir <nombre> =>crear carpeta || rmdir <nombre> =>eliminar carpeta
-touch <nombre> =>crear un archivo
-ls => muestra los archivos y carpetas que hay en tu ubicacion
-ls -a => muestra tambien los archivos ocultos
-pwd => muestra la ruta en la que estas actualmente
-rm => eliminar archivo
-nano <nombreArchivo> => entra al archivo y puedes añadir cosas
-cat <nombreArchivo> => muestra lo que hay en el archivo

(ADD Y COMMINTS)
-git init => (Ya dentro de la carpeta en la que quieres iniciar git)
-git add <nombre-archivo> || <.> => Añade los archivos a la Stage area.
-git commit -m "Comentario obligatorio"-> Confirma los cambios en los archivos de la Staged area. 
	+--amend -m <"nuevo-nombre"> => Cambia el nombre al commit anterior.
	+-a  añade automáticamente al área de preparación todos los archivos modificados, no incluye archivos nuevos 
-git branch -M main => renombrar la rama actual a "main", forzando el cambio si ya existe una rama con ese nombre.
-git remote add origin https://github.com/alvarooo32/despliegue-web-2024.git => enlazar con el repositorio
-git status => Indica el estado de los archivos de la Working y Stage Area (-s) para mostrarlo de forma resumida.
-git rm <nombre>-> Borra un archivo del proyecto git.
	+--cached <nombre> -a => para eliminar un archivo del staging area de Git sin eliminarlo del local.
-git push =>  sube cambios a una rama remota ya configurada.
	+ git push -u origin main => empuja los commits de la rama local "main" al repositorio remoto "origin"
-git clone <urlREPO> => para colnar el repositorio (Por SSH o HTTPS)

(GIT RESTORE Y CHECKOUT)
-git restore <nombre> => recupero el archivo borrado
-git checkout <id del commit ||  master> -> Cambiamos la HEAD  al commit que queramos.
	+ checkout <id commit> -- <ruta_archivo> -> Restaura la version de un archivo específico de un commit distinto.
-git reset --hard => deshace los cambios en tu repositorio, tanto en el staging area como en tu directorio de trabajo.
-git mv <nombreAntiguo> <nombreNuevo> => cambia de nombre al archivo

(GIT DIFF Y GIT LOG) 
- git diff 
	+--staged => muestra las diferencias entre que hay en el staged area
 	+ <numeroDelCommit1> <numeroDelCommit2> => muestra la comparacion de los dos commits
	+--word-diff muestra las diferencias entre versiones de un archivo palabra por palabra, no x linea
- git log => Indica estado de los commits realizados.
	+ --oneline -> Lo hace en una linea.
	+ --raw -> Te dice los archivos confirmados en cada commit.
	+ --stat -> Muestra el numero de inserciones y eliminaciones de cada archivo modificado.
	+ -p -> Muestra todos los cambios reales del parche.
	+ --graph -> Muestra graficamente los nodos y ramas.
	+ --pretty -> Más graficamente.

(RAMAS)
-git branch => muestra todas las ramas que tenemos creadas
	+ <nombre> => crear una nueva rama
	+ -d <nombre> => borra la rama q quieras **(Pero antes tienes q salirte de la rama q quieres borrar)
	+ -m <nombreViejo> <nombreNuevo> => cambiar el nombre de otra rama en la q no estas
	+ -m <nombreNuevo> => cambia el nombre de la rama en la que estas
-git switch <nombre-rama> => para moverte de rama
	+ -c <nombre-rama> => crea y cambia a una nueva rama en un solo paso
-git merge <nombreRama> => unir las ramas (Pon el nombre de la rama a ala que t quieras unir)

(GIT PULL Y GIT FETCH ??)
-git pull || git pull origin main => Descarga los archivos que han sufrido cambios del repositorio
-git fetch => Actualiza los metadatos del repositorio remoto.

(ALIAS ??)
-git config --global alias.<abreviatura> <comando a abreviar> => Crea un alias para llamar a un comando.

(CLASE 10/10/2024)
-git blame <nombreArchivo> => para saber quien ha modificado los ficheros
-git show => te enseña los detalles del ultimo commit
-git stash => para guardar temporalmente cambios en tu directorio de trabajo sin necesidad de hacer un commit (en local) menos los untracked
	+ pop => rescata a los archivos stasheados
	+ list => lista de stash guardados
	+ drop => elimina el stash

(Cambiar remote HTTPS o SSH)
-git remote rm origin => se elimina
-git remote -v => si no sale nada se ha eliminado correctamente
-git remote add origin <url HTTPS || url SSH> => enlazas con otro remoto